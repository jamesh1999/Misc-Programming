Assembling: test.al into test.cpu


Reading test.al...
	0:    ['IMPORT', 'setup']
	1:    ['IMPORT', 'print']
	2:    ['ADD', 'SP', '8']
	3:    ['SUB', 'SP', '8']
	4:    ['HALT']


Linking test.al...
	setup.al


Reading setup.al...
	0:    ['SET', 'FP', '122880']
	1:    ['SET', 'SP', '122876']
	2:    ['SET', 'GP', '126976']


Linking setup.al...
Done linking setup.al!
	print.al


Reading print.al...
	0:    ['GOTO', ':', 'PRINT_SKIP']
	1:    ['>', 'PRINT_D', '$0']
	2:    ['PUSH', 'ZERO']
	3:    [':', 'PRINTD_REPEAT']
	4:    ['REM', '$1', '$0', '10']
	5:    ['ADD', '$1', '48']
	6:    ['PUSH', '$1']
	7:    ['DIV', '$0', '10']
	8:    ['BRANCH', '$0', '!=', 'ZERO', ':', 'PRINTD_REPEAT']
	9:    [':', 'PRINTD_DIGITS']
	10:   ['POP', '$0']
	11:   ['BRANCH', '$0', '==', 'ZERO', ':', 'PRINTD_DONE']
	12:   ['OUT', '$0']
	13:   ['GOTO', ':', 'PRINTD_DIGITS']
	14:   [':', 'PRINTD_DONE']
	15:   ['SET', '$0', '10']
	16:   ['OUT', '$0']
	17:   ['RET']
	18:   ['>', 'PRINT_CH', '$2']
	19:   ['OUT', '$2']
	20:   ['RET']
	21:   ['>', 'PRINT_STR', '$4']
	22:   [':', 'PRINTSTR_AGAIN']
	23:   ['LW', '$3', '$4']
	24:   ['BRANCH', '$3', '==', 'ZERO', ':', 'PRINTSTR_END']
	25:   ['OUT', '$3']
	26:   ['ADD', '$4', '4']
	27:   ['GOTO', ':', 'PRINTSTR_AGAIN']
	28:   [':', 'PRINTSTR_END']
	29:   ['SET', '$3', '10']
	30:   ['OUT', '$3']
	31:   ['RET']
	32:   [':', 'PRINT_SKIP']


Linking print.al...
Done linking print.al!
Done linking test.al!


Converting high-level to low-level assembly:
Expanding macros...
	Removing branches...
	Expanding macros...
	['SET', 'FP', '122880']  =>  [['LUI', 'FP', '30'],

	['SET', 'SP', '122876']  =>  [['LUI', 'SP', '29'],
			['ADDUI', 'SP', '4092'],

	['SET', 'GP', '126976']  =>  [['LUI', 'GP', '31'],

	['GOTO', ':', 'PRINT_SKIP']  =>  ['JAL', ':', 'PRINT_SKIP']

	['>', 'PRINT_D', '$0']  =>  [[':', 'PRINT_D'],
			['LW', '$0', 'SP', '-', '0'],
			['SUBUI', 'SP', '4'],
			['SW', 'FP', 'SP', '+', '4'],
			['SW', 'RA', 'SP', '+', '8'],
			['ADDUI', 'SP', '8'],
			['ADDUI', 'FP', 'SP', '4'],

	['PUSH', 'ZERO']  =>  [['SW', 'ZERO', 'SP', '+', '4'],
			['ADDUI', 'SP', '4'],

	['PUSH', '$1']  =>  [['SW', '$1', 'SP', '+', '4'],
			['ADDUI', 'SP', '4'],

	['POP', '$0']  =>  [['LW', '$0', 'SP', '-', '0'],
			['SUBUI', 'SP', '4'],

	['GOTO', ':', 'PRINTD_DIGITS']  =>  ['JAL', ':', 'PRINTD_DIGITS']

	['SET', '$0', '10']  =>  [['ADDUI', '$0', 'ZERO', '10'],

	['RET']  =>  [['SUBUI', 'SP', 'FP', '12'],
			['LW', 'FP', 'SP', '+', '4'],
			['LW', 'RA', 'SP', '+', '8'],
			['JALR', 'ZERO', 'RA', '+', '4'],

	['>', 'PRINT_CH', '$2']  =>  [[':', 'PRINT_CH'],
			['LW', '$2', 'SP', '-', '0'],
			['SUBUI', 'SP', '4'],
			['SW', 'FP', 'SP', '+', '4'],
			['SW', 'RA', 'SP', '+', '8'],
			['ADDUI', 'SP', '8'],
			['ADDUI', 'FP', 'SP', '4'],

	['RET']  =>  [['SUBUI', 'SP', 'FP', '12'],
			['LW', 'FP', 'SP', '+', '4'],
			['LW', 'RA', 'SP', '+', '8'],
			['JALR', 'ZERO', 'RA', '+', '4'],

	['>', 'PRINT_STR', '$4']  =>  [[':', 'PRINT_STR'],
			['LW', '$4', 'SP', '-', '0'],
			['SUBUI', 'SP', '4'],
			['SW', 'FP', 'SP', '+', '4'],
			['SW', 'RA', 'SP', '+', '8'],
			['ADDUI', 'SP', '8'],
			['ADDUI', 'FP', 'SP', '4'],

	['GOTO', ':', 'PRINTSTR_AGAIN']  =>  ['JAL', ':', 'PRINTSTR_AGAIN']

	['SET', '$3', '10']  =>  [['ADDUI', '$3', 'ZERO', '10'],

	['RET']  =>  [['SUBUI', 'SP', 'FP', '12'],
			['LW', 'FP', 'SP', '+', '4'],
			['LW', 'RA', 'SP', '+', '8'],
			['JALR', 'ZERO', 'RA', '+', '4'],



Final pass...
	Creating global variables...
	Removing globals...
	Removing arbitrary registers...
	Removing jump anchors...


Performing low-level assembly:
Converting to binary...
	['LUI', 'FP', '30']  =>  00000000001000000000000000011110
	['LUI', 'SP', '29']  =>  00000000111000000000000000011101
	['ADDUI', 'SP', '4092']  =>  10000100111000101110111111111100
	['LUI', 'GP', '31']  =>  00000001111100000000000000011111
	['JAL', '+', '236']  =>  00000010000000000000000001110110
	['LW', 'S1', 'GP', '-', '4']  =>  10000010001110011111111111111100
	['LW', 'S1', 'SP', '-', '0']  =>  10000010001110001110000000000000
	['SUBUI', 'SP', '4']  =>  10000100111001101110000000000100
	['SW', 'FP', 'SP', '+', '4']  =>  10001010001000001110000000000100
	['SW', 'RA', 'SP', '+', '8']  =>  10001010000100001110000000001000
	['ADDUI', 'SP', '8']  =>  10000100111000101110000000001000
	['ADDUI', 'FP', 'SP', '4']  =>  10000100001000101110000000000100
	['SW', 'ZERO', 'SP', '+', '4']  =>  10001010000000001110000000000100
	['ADDUI', 'SP', '4']  =>  10000100111000101110000000000100
	['LW', 'S2', 'GP', '-', '8']  =>  10000010010010011111111111111000
	['REM', 'S2', 'X3', '10']  =>  10001000010001100011000000001010
	['ADD', 'X4', '48']  =>  10000100010000000100000000110000
	['SW', 'X4', 'SP', '+', '4']  =>  10001010010000001110000000000100
	['ADDUI', 'SP', '4']  =>  10000100111000101110000000000100
	['DIV', 'X3', '10']  =>  10001000001101000011000000001010
	['BNE', 'ZERO', 'X3', 'ZERO', '-', '24']  =>  01000110000000000011000001110100
	['LW', 'X3', 'SP', '-', '0']  =>  10000010001110001110000000000000
	['SUBUI', 'SP', '4']  =>  10000100111001101110000000000100
	['BEQ', 'ZERO', 'X3', 'ZERO', '+', '12']  =>  01000110000001000011000000000110
	['OUT', 'X3']  =>  10010010001100000011000000000000
	['JAL', '-', '16']  =>  00000010000011111111111111111000
	['ADDUI', 'X3', 'ZERO', '10']  =>  10000100001100100000000000001010
	['OUT', 'X3']  =>  10010010001100000011000000000000
	['SUBUI', 'SP', 'FP', '12']  =>  10000100111001100010000000001100
	['LW', 'FP', 'SP', '+', '4']  =>  10000010001010001110000000000100
	['LW', 'RA', 'SP', '+', '8']  =>  10000010000110001110000000001000
	['JALR', 'ZERO', 'RA', '+', '4']  =>  10001110000000000001000000000010
	['LW', 'S3', 'GP', '-', '12']  =>  10000010010110011111111111110100
	['LW', 'S3', 'SP', '-', '0']  =>  10000010010110001110000000000000
	['SUBUI', 'SP', '4']  =>  10000100111001101110000000000100
	['SW', 'FP', 'SP', '+', '4']  =>  10001010001000001110000000000100
	['SW', 'RA', 'SP', '+', '8']  =>  10001010000100001110000000001000
	['ADDUI', 'SP', '8']  =>  10000100111000101110000000001000
	['ADDUI', 'FP', 'SP', '4']  =>  10000100001000101110000000000100
	['OUT', 'X5']  =>  10010010010100000101000000000000
	['SUBUI', 'SP', 'FP', '12']  =>  10000100111001100010000000001100
	['LW', 'FP', 'SP', '+', '4']  =>  10000010001010001110000000000100
	['LW', 'RA', 'SP', '+', '8']  =>  10000010000110001110000000001000
	['JALR', 'ZERO', 'RA', '+', '4']  =>  10001110000000000001000000000010
	['LW', 'S4', 'GP', '-', '20']  =>  10000010011010011111111111101100
	['LW', 'S4', 'SP', '-', '0']  =>  10000010011010001110000000000000
	['SUBUI', 'SP', '4']  =>  10000100111001101110000000000100
	['SW', 'FP', 'SP', '+', '4']  =>  10001010001000001110000000000100
	['SW', 'RA', 'SP', '+', '8']  =>  10001010000100001110000000001000
	['ADDUI', 'SP', '8']  =>  10000100111000101110000000001000
	['ADDUI', 'FP', 'SP', '4']  =>  10000100001000101110000000000100
	['LW', 'S5', 'GP', '-', '16']  =>  10000010011110011111111111110000
	['LW', 'S5', 'X6']  =>  10000010011110000110000000000000
	['BEQ', 'ZERO', 'X7', 'ZERO', '+', '16']  =>  01000110000001000111000000001000
	['OUT', 'X7']  =>  10010010011100000111000000000000
	['ADD', 'X6', '4']  =>  10000100011000000110000000000100
	['JAL', '-', '20']  =>  00000010000011111111111111110110
	['ADDUI', 'X7', 'ZERO', '10']  =>  10000100011100100000000000001010
	['OUT', 'X7']  =>  10010010011100000111000000000000
	['SUBUI', 'SP', 'FP', '12']  =>  10000100111001100010000000001100
	['LW', 'FP', 'SP', '+', '4']  =>  10000010001010001110000000000100
	['LW', 'RA', 'SP', '+', '8']  =>  10000010000110001110000000001000
	['JALR', 'ZERO', 'RA', '+', '4']  =>  10001110000000000001000000000010
	['ADD', 'SP', '8']  =>  10000100111000101110000000001000
	['SUB', 'SP', '8']  =>  10000100111001101110000000001000
	['HALT']  =>  00001000000000000000000000000000


Writing binary to test.cpu...
	00000000001000000000000000011110  =>  0 32 0 30
	00000000111000000000000000011101  =>  0 224 0 29
	10000100111000101110111111111100  =>  132 226 239 252
	00000001111100000000000000011111  =>  1 240 0 31
	00000010000000000000000001110110  =>  2 0 0 118
	10000010001110011111111111111100  =>  130 57 255 252
	10000010001110001110000000000000  =>  130 56 224 0
	10000100111001101110000000000100  =>  132 230 224 4
	10001010001000001110000000000100  =>  138 32 224 4
	10001010000100001110000000001000  =>  138 16 224 8
	10000100111000101110000000001000  =>  132 226 224 8
	10000100001000101110000000000100  =>  132 34 224 4
	10001010000000001110000000000100  =>  138 0 224 4
	10000100111000101110000000000100  =>  132 226 224 4
	10000010010010011111111111111000  =>  130 73 255 248
	10001000010001100011000000001010  =>  136 70 48 10
	10000100010000000100000000110000  =>  132 64 64 48
	10001010010000001110000000000100  =>  138 64 224 4
	10000100111000101110000000000100  =>  132 226 224 4
	10001000001101000011000000001010  =>  136 52 48 10
	01000110000000000011000001110100  =>  70 0 48 116
	10000010001110001110000000000000  =>  130 56 224 0
	10000100111001101110000000000100  =>  132 230 224 4
	01000110000001000011000000000110  =>  70 4 48 6
	10010010001100000011000000000000  =>  146 48 48 0
	00000010000011111111111111111000  =>  2 15 255 248
	10000100001100100000000000001010  =>  132 50 0 10
	10010010001100000011000000000000  =>  146 48 48 0
	10000100111001100010000000001100  =>  132 230 32 12
	10000010001010001110000000000100  =>  130 40 224 4
	10000010000110001110000000001000  =>  130 24 224 8
	10001110000000000001000000000010  =>  142 0 16 2
	10000010010110011111111111110100  =>  130 89 255 244
	10000010010110001110000000000000  =>  130 88 224 0
	10000100111001101110000000000100  =>  132 230 224 4
	10001010001000001110000000000100  =>  138 32 224 4
	10001010000100001110000000001000  =>  138 16 224 8
	10000100111000101110000000001000  =>  132 226 224 8
	10000100001000101110000000000100  =>  132 34 224 4
	10010010010100000101000000000000  =>  146 80 80 0
	10000100111001100010000000001100  =>  132 230 32 12
	10000010001010001110000000000100  =>  130 40 224 4
	10000010000110001110000000001000  =>  130 24 224 8
	10001110000000000001000000000010  =>  142 0 16 2
	10000010011010011111111111101100  =>  130 105 255 236
	10000010011010001110000000000000  =>  130 104 224 0
	10000100111001101110000000000100  =>  132 230 224 4
	10001010001000001110000000000100  =>  138 32 224 4
	10001010000100001110000000001000  =>  138 16 224 8
	10000100111000101110000000001000  =>  132 226 224 8
	10000100001000101110000000000100  =>  132 34 224 4
	10000010011110011111111111110000  =>  130 121 255 240
	10000010011110000110000000000000  =>  130 120 96 0
	01000110000001000111000000001000  =>  70 4 112 8
	10010010011100000111000000000000  =>  146 112 112 0
	10000100011000000110000000000100  =>  132 96 96 4
	00000010000011111111111111110110  =>  2 15 255 246
	10000100011100100000000000001010  =>  132 114 0 10
	10010010011100000111000000000000  =>  146 112 112 0
	10000100111001100010000000001100  =>  132 230 32 12
	10000010001010001110000000000100  =>  130 40 224 4
	10000010000110001110000000001000  =>  130 24 224 8
	10001110000000000001000000000010  =>  142 0 16 2
	10000100111000101110000000001000  =>  132 226 224 8
	10000100111001101110000000001000  =>  132 230 224 8
	00001000000000000000000000000000  =>  8 0 0 0
