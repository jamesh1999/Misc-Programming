<stmnt_init>[0] 		::= <type> STRING "=" <expr>
<stmnt_init>[1]			::= <type> STRING "=" <array>

<stmnt_flow_return>[0]	::= "return;"
<stmnt_flow_return>[1]	::= "return" <expr> ";"

<expr_assign>[0]		::= STRING "=" <expr>
<expr_assign>[1]		::= STRING "+=" <expr>
<expr_assign>[2]		::= STRING "-=" <expr>
<expr_assign>[3]		::= STRING "*=" <expr>
<expr_assign>[4]		::= STRING "/=" <expr>
<expr_assign>[5]		::= STRING "%=" <expr>
<expr_assign>[6]		::= STRING "<<=" <expr>
<expr_assign>[7]		::= STRING ">>=" <expr>
<expr_assign>[8]		::= STRING "&=" <expr>
<expr_assign>[9]		::= STRING "^=" <expr>
<expr_assign>[10]		::= STRING "|=" <expr>

<expr_logical_or>[0]	::= <expr_logical_or> "||" <expr_logical_and>
<expr_logical_and>[0]	::= <expr_logical_and> "&&" <expr_bitwise_or>
<expr_bitwise_or>[0]	::= <expr_bitwise_or> "|" <expr_bitwise_and> 
<expr_bitwise_and>[0]	::= <expr_bitwise_and> "&" <expr_conditional>

<expr_conditional>[0]	::= <expr_conditional> "==" <expr_shift>
<expr_conditional>[1]	::= <expr_conditional> "!=" <expr_shift>
<expr_conditional>[2]	::= <expr_conditional> ">" <expr_shift>
<expr_conditional>[3]	::= <expr_conditional> "<" <expr_shift>
<expr_conditional>[4]	::= <expr_conditional> ">=" <expr_shift>
<expr_conditional>[5]	::= <expr_conditional> "<=" <expr_shift>

<expr_shift>[0]			::= <expr_shift> ">>" <expr_add>
<expr_shift>[1]			::= <expr_shift> "<<" <expr_add>

<expr_add>[0]			::= <expr_add> "+" <expr_mul>
<expr_add>[1]			::= <expr_add> "-" <expr_mul>

<expr_mul>[0]			::= <expr_mul> "*" <expr_unary>
<expr_mul>[1]			::= <expr_mul> "/" <expr_unary>
<expr_mul>[2]			::= <expr_mul> "%" <expr_unary>

<expr_unary>[0]			::= "&" <expr_unary>
<expr_unary>[1]			::= "*" <expr_unary>
<expr_unary>[2]			::= "!" <expr_unary>
<expr_unary>[3]			::= "~" <expr_unary>
<expr_unary>[4]			::= "-" <expr_unary>
<expr_unary>[5]			::= "(" <type> ")" <expr_unary>

<expr_unary2>[0]		::= "[" INT "]" <expr_unary2>

<term>[0]				::= INT
<term>[1]				::= "true"
<term>[2]				::= "false"
<term>[3]				::= STRING