Compiling test.cm into test.cpu...
Preprocessing...
Done

Tokenizing...
Token stream:
['int', 'fact', '(', 'int', 'n', ')', '{', 'int', 'r', '=', '1', ';', 'for', '(', 'int', 'i', '=', 'n', ';', 'i', '>', '1', ';', 'i', '-', '=', '1', ')', 'r', '*', '=', 'i', ';', 'return', 'r', ';', '}', 'int', 'main', '(', ')', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', '3', ';', 'i', '+', '=', '1', ')', 'printi', '(', 'i', ')', ';', 'return', 'fact', '(', '3', ')', '+', '6', ';', '}']


Parsing...
Generated parse tree:
- PROGRAM
|- START
|- ebnf_0
||...- stmnt_func
||   |- definition
||   || ... type_base
||   || STRING
||   |- func_scope
||   ||...- definition
||   ||   | ... type_base
||   ||   | STRING
||   ||- block
||   |||- ebnf_1
||   ||||- ebnf_1
||   |||||...- statement
||   |||||   |- stmnt_init
||   |||||   ||- definition
||   |||||   ||| ... type_base
||   |||||   ||| STRING
||   |||||   || ... INT
||   |||||...- stmnt_flow_for
||   |||||   |- stmnt_init
||   |||||   ||- definition
||   |||||   ||| ... type_base
||   |||||   ||| STRING
||   |||||   || ... STRING
||   |||||   |...- expr_conditional
||   |||||   |   | ... STRING
||   |||||   |   | op_conditional
||   |||||   |   | ... INT
||   |||||   |...- expr_assign
||   |||||   |   | STRING
||   |||||   |   |- op_assign
||   |||||   |   | ... INT
||   |||||   |- statement
||   |||||   ||...- expr_assign
||   |||||   ||   | STRING
||   |||||   ||   |- op_assign
||   |||||   ||   | ... STRING
||   ||||...- stmnt_flow_return
||   ||||   | ... STRING
||...- stmnt_func
||   |- definition
||   || ... type_base
||   || STRING
||   |- func_scope
||   ||- block
||   |||- ebnf_1
||   ||||...- stmnt_flow_for
||   ||||   |- stmnt_init
||   ||||   ||- definition
||   ||||   ||| ... type_base
||   ||||   ||| STRING
||   ||||   || ... INT
||   ||||   |...- expr_conditional
||   ||||   |   | ... STRING
||   ||||   |   | op_conditional
||   ||||   |   | ... INT
||   ||||   |...- expr_assign
||   ||||   |   | STRING
||   ||||   |   |- op_assign
||   ||||   |   | ... INT
||   ||||   |- statement
||   ||||   ||- stmnt_call
||   ||||   ||| macro
||   ||||   ||| ... STRING
||   ||||...- stmnt_flow_return
||   ||||   |...- expr_add
||   ||||   |   |...- stmnt_call
||   ||||   |   |   | STRING
||   ||||   |   |   | ... INT
||   ||||   |   | op_add
||   ||||   |   | ... INT
|- END



Locating symbols...
Symbol table:
          STRING |             TYPE |             ADDR |             SIZE |            SCOPE |        ARGUMENTS
---------------------------------------------------------------------------------------------------------------
            fact |              int |                0 |                4 |              [0] | [[[[[], 'int']], 4]]
               n |              int |                0 |                4 |           [0, 0] |               []
               r |              int |                4 |                4 |           [0, 0] |               []
               i |              int |                8 |                4 |           [0, 0] |               []
            main |              int |                4 |                4 |              [0] |               []
               i |              int |                0 |                4 |           [0, 1] |               []


Generating code...
Constructed high level assembly:
0    : //Setup assembly
1    : import setup
2    : import print
3    : Add SP 
4    : //Start program
5    : Add $267 ZERO ZERO
6    : Add $268 ZERO ZERO
7    : Goto :ANCHOR_0
8    : >fact
9    : Add SP 
10   : Add $42 ZERO 1
11   : Mov $41 $42
12   : Mov $40 $41
13   : Mov $39 $40
14   : Mov $38 $39
15   : Mov $37 $38
16   : Mov $36 $37
17   : Mov $35 $36
18   : Mov $34 $35
19   : Mov $33 $34
20   : Mov $32 $33
21   : Mov $31 $32
22   : Mov $30 $31
23   : Mov $269 $30
24   : Sw $269 FP + 4
25   : Lw $270 FP + 0
26   : Mov $65 $270
27   : Mov $64 $65
28   : Mov $63 $64
29   : Mov $62 $63
30   : Mov $61 $62
31   : Mov $60 $61
32   : Mov $59 $60
33   : Mov $58 $59
34   : Mov $57 $58
35   : Mov $56 $57
36   : Mov $55 $56
37   : Mov $54 $55
38   : Mov $53 $54
39   : Mov $271 $53
40   : Sw $271 FP + 8
41   : :ANCHOR_1
42   : Lw $272 FP + 8
43   : Mov $80 $272
44   : Mov $79 $80
45   : Mov $78 $79
46   : Mov $77 $78
47   : Mov $76 $77
48   : Mov $75 $76
49   : Mov $74 $75
50   : Mov $73 $74
51   : Add $89 ZERO 1
52   : Mov $88 $89
53   : Mov $87 $88
54   : Mov $86 $87
55   : Mov $85 $86
56   : Mov $84 $85
57   : Mov $83 $84
58   : Branch ($73 > $83) :ANCHOR_3
59   : Mov $72 ZERO
60   : Goto :ANCHOR_4
61   : :ANCHOR_3
62   : Not $72 ZERO
63   : :ANCHOR_4
64   : Mov $71 $72
65   : Mov $70 $71
66   : Mov $69 $70
67   : Mov $68 $69
68   : Mov $67 $68
69   : Branch ($67 == ZERO) :ANCHOR_2
70   : Lw $274 FP + 8
71   : Mov $126 $274
72   : Mov $125 $126
73   : Mov $124 $125
74   : Mov $123 $124
75   : Mov $122 $123
76   : Mov $121 $122
77   : Mov $120 $121
78   : Mov $119 $120
79   : Mov $118 $119
80   : Mov $117 $118
81   : Mov $116 $117
82   : Mov $115 $116
83   : Mov $114 $115
84   : Lw $275 FP + 4
85   : Mul $275 $114
86   : Sw $275 FP + 4
87   : Add $107 ZERO 1
88   : Mov $106 $107
89   : Mov $105 $106
90   : Mov $104 $105
91   : Mov $103 $104
92   : Mov $102 $103
93   : Mov $101 $102
94   : Mov $100 $101
95   : Mov $99 $100
96   : Mov $98 $99
97   : Mov $97 $98
98   : Mov $96 $97
99   : Mov $95 $96
100  : Lw $273 FP + 8
101  : Sub $273 $95
102  : Sw $273 FP + 8
103  : Goto :ANCHOR_1
104  : :ANCHOR_2
105  : Lw $276 FP + 4
106  : Mov $143 $276
107  : Mov $142 $143
108  : Mov $141 $142
109  : Mov $140 $141
110  : Mov $139 $140
111  : Mov $138 $139
112  : Mov $137 $138
113  : Mov $136 $137
114  : Mov $135 $136
115  : Mov $134 $135
116  : Mov $133 $134
117  : Mov $132 $133
118  : Mov $131 $132
119  : Sub SP 
120  : Sw $131 FP + 0
121  : Ret
122  : Sub SP 
123  : :ANCHOR_0
124  : Mov $4 $5
125  : Mov $3 $4
126  : Goto :ANCHOR_5
127  : >main
128  : Add SP 
129  : Add $177 ZERO 0
130  : Mov $176 $177
131  : Mov $175 $176
132  : Mov $174 $175
133  : Mov $173 $174
134  : Mov $172 $173
135  : Mov $171 $172
136  : Mov $170 $171
137  : Mov $169 $170
138  : Mov $168 $169
139  : Mov $167 $168
140  : Mov $166 $167
141  : Mov $165 $166
142  : Mov $277 $165
143  : Sw $277 FP + 8
144  : :ANCHOR_6
145  : Lw $278 FP + 8
146  : Mov $192 $278
147  : Mov $191 $192
148  : Mov $190 $191
149  : Mov $189 $190
150  : Mov $188 $189
151  : Mov $187 $188
152  : Mov $186 $187
153  : Mov $185 $186
154  : Add $201 ZERO 3
155  : Mov $200 $201
156  : Mov $199 $200
157  : Mov $198 $199
158  : Mov $197 $198
159  : Mov $196 $197
160  : Mov $195 $196
161  : Branch ($185 < $195) :ANCHOR_8
162  : Mov $184 ZERO
163  : Goto :ANCHOR_9
164  : :ANCHOR_8
165  : Not $184 ZERO
166  : :ANCHOR_9
167  : Mov $183 $184
168  : Mov $182 $183
169  : Mov $181 $182
170  : Mov $180 $181
171  : Mov $179 $180
172  : Branch ($179 == ZERO) :ANCHOR_7
173  : Lw $280 FP + 8
174  : Mov $224 $280
175  : Push $224
176  : Call :print_d
177  : Add $219 ZERO 1
178  : Mov $218 $219
179  : Mov $217 $218
180  : Mov $216 $217
181  : Mov $215 $216
182  : Mov $214 $215
183  : Mov $213 $214
184  : Mov $212 $213
185  : Mov $211 $212
186  : Mov $210 $211
187  : Mov $209 $210
188  : Mov $208 $209
189  : Mov $207 $208
190  : Lw $279 FP + 8
191  : Add $279 $207
192  : Sw $279 FP + 8
193  : Goto :ANCHOR_6
194  : :ANCHOR_7
195  : Mov $281 SP
196  : Add SP 8
197  : Add $257 ZERO 3
198  : Mov $256 $257
199  : Mov $255 $256
200  : Mov $254 $255
201  : Mov $253 $254
202  : Mov $252 $253
203  : Mov $251 $252
204  : Mov $250 $251
205  : Mov $249 $250
206  : Mov $248 $249
207  : Mov $247 $248
208  : Mov $246 $247
209  : Mov $245 $246
210  : Push $245
211  : Mov SP $281
212  : Call :fact
213  : Lw $242 SP + 12
214  : Mov $241 $242
215  : Mov $240 $241
216  : Mov $239 $240
217  : Mov $238 $239
218  : Mov $237 $238
219  : Add $264 ZERO 6
220  : Mov $263 $264
221  : Mov $262 $263
222  : Mov $261 $262
223  : Mov $260 $261
224  : Add $236 $237 $260
225  : Mov $235 $236
226  : Mov $234 $235
227  : Mov $233 $234
228  : Mov $232 $233
229  : Mov $231 $232
230  : Mov $230 $231
231  : Mov $229 $230
232  : Sub SP 
233  : Sw $229 FP + 0
234  : Ret
235  : Sub SP 
236  : :ANCHOR_5
237  : Mov $2 $3
238  : //Call program
239  : Call :main
240  : //Print result
241  : Lw $282 SP + 12
242  : Add $283 SP 4
243  : Set $284 'M'
244  : Push $284
245  : Set $284 'a'
246  : Push $284
247  : Set $284 'i'
248  : Push $284
249  : Set $284 'n'
250  : Push $284
251  : Set $284 ' '
252  : Push $284
253  : Set $284 'e'
254  : Push $284
255  : Set $284 'x'
256  : Push $284
257  : Set $284 'i'
258  : Push $284
259  : Set $284 't'
260  : Push $284
261  : Set $284 'e'
262  : Push $284
263  : Set $284 'd'
264  : Push $284
265  : Set $284 ' '
266  : Push $284
267  : Set $284 'w'
268  : Push $284
269  : Set $284 'i'
270  : Push $284
271  : Set $284 't'
272  : Push $284
273  : Set $284 'h'
274  : Push $284
275  : Set $284 ' '
276  : Push $284
277  : Set $284 'c'
278  : Push $284
279  : Set $284 'o'
280  : Push $284
281  : Set $284 'd'
282  : Push $284
283  : Set $284 'e'
284  : Push $284
285  : Set $284 ':'
286  : Push $284
287  : Set $284 ' '
288  : Push $284, ZERO, $283
289  : Call :print_str
290  : Sub SP $283 4
291  : Push $282
292  : Call :print_d
293  : Mov $0 $2
294  : Sub SP 
295  : Halt
296  : 

Saving to test.al...
Saved
