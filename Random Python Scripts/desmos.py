def getEquation(a,b):
	return "((" + str(b[1]) + "/(a+" + str(b[0]) + "sin(b)+" + str(b[2]) + "cos(b))-" + str(a[1]) + "/(a+" + str(a[0]) + "sin(b)+" + str(a[2]) + "cos(b)))/((" + str(b[0]) + "cos(b)-" + str(b[2]) + "sin(b))/(a+" + str(b[0]) + "sin(b)+" + str(b[2]) + "cos(b))-(" + str(a[0]) + "cos(b)-" + str(a[2]) + "sin(b))/(a+" + str(a[0]) + "sin(b)+" + str(a[2]) + "cos(b))))*(x-(" + str(a[0]) + "cos(b)-" + str(a[2]) + "sin(b))/(a+" + str(a[0]) + "sin(b)+" + str(a[2]) + "cos(b)))+" + str(a[1]) + "/(a+" + str(a[0]) + "sin(b)+" + str(a[2]) + "cos(b))"

lines = [[[-0.45, -10, 0.45], [-0.45, -8, 0.45]], #Fin1
		[[-0.45, -8, 0.45], [-1, -9, 1]],
		[[-1, -9, 1], [-0.9, -12, 0.9]],
		[[-0.9, -12, 0.9], [-0.45, -10, 0.45]],
		[[-0.45, -10, -0.45], [-0.45, -8, -0.45]], #Fin2
		[[-0.45, -8, -0.45], [-1, -9, -1]],
		[[-1, -9, -1], [-0.9, -12, -0.9]],
		[[-0.9, -12, -0.9], [-0.45, -10, -0.45]],
		[[0.45, -10, -0.45], [0.45, -8, -0.45]], #Fin3
		[[0.45, -8, -0.45], [1, -9, -1]],
		[[1, -9, -1], [0.9, -12, -0.9]],
		[[0.9, -12, -0.9], [0.45, -10, -0.45]],
		[[0.45, -10, 0.45], [0.45, -8, 0.45]], #Fin4
		[[0.45, -8, 0.45], [1, -9, 1]],
		[[1, -9, 1], [0.9, -12, 0.9]],
		[[0.9, -12, 0.9], [0.45, -10, 0.45]],
		[[0,-10,0.9], [0,2,1]], #Body
		[[0,-10,-0.9], [0,2,-1]],
		[[0.9,-10,0], [1,2,0]],
		[[-0.9,-10,0], [-1,2,0]],
		[[-0.9,-10,0], [0,-10,0.9]],
		[[0,-10,0.9], [0.9,-10,0]],
		[[0.9,-10,0], [0,-10,-0.9]],
		[[0,-10,-0.9], [-0.9,-10,0]],
		[[0,2,1], [1,2,0]], #Nose cone
		[[1,2,0], [0,2,-1]],
		[[0,2,-1], [-1,2,0]],
		[[-1,2,0], [0,2,1]],
		[[0,4,0], [0,2,1]],
		[[0,4,0], [0,2,-1]],
		[[0,4,0], [1,2,0]],
		[[0,4,0], [-1,2,0]]]

tot = "window.Calc.setExpression({id: 'a', latex: 'a=2.5', sliderBounds: { min: 1, max: 10, step: 0.1}});window.Calc.setExpression({id: 'b', latex: 'b=0', sliderBounds: { min: 0, max: 6.175, step: 0.025}});"

for line in lines:
	eq = getEquation(line[0], line[1])
	tot += "window.Calc.setExpression({latex: 'y=" + eq + "'});"

open("desmos.txt", "w").write(tot)